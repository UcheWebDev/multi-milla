<template>
  <div class="max-w-md mx-auto p-4">
    <!-- Header -->
    <div class="relative flex items-center justify-between mb-8 mt-4">
      <!-- <button class="">
        <span class="material-icons text-black">arrow_forward</span>
      </button> -->
      <h1
        class="absolute left-1/2 transform -translate-x-1/2 text-2xl font-bold text-navy-900"
      >
        Dashboard
      </h1>
    </div>

    <!-- Wallet Section -->
    <div class="px-4 mb-6">
      <!-- Balance -->
      <div
        class="wallet-card bg-gradient-to-br from-red-800 via-red-800 to-red-800 text-white p-6 rounded-2xl mb-8 relative overflow-hidden"
      >
        <div
          class="absolute top-0 right-0 w-32 h-32 bg-red-500 rounded-bl-full opacity-50"
        ></div>
        <div
          class="absolute bottom-0 left-0 w-24 h-24 bg-red-500 rounded-tr-full opacity-30"
        ></div>
        <p class="text-sm font-medium mb-1 relative z-10">Total Balance</p>
        <div class="flex justify-between items-center relative z-10">
          <p class="text-3xl font-bold">$ 0</p>
          <button
            class="p-2 rounded-full hover:bg-blue-700/50 transition duration-200"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
              />
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
              />
            </svg>
          </button>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex justify-between mb-6">
        <router-link
          v-for="(action, index) in actions"
          :to="action.path"
          :key="index"
          @click="action.handler"
          class="w-1/3 flex flex-col items-center"
        >
          <div
            class="w-14 h-14 bg-gray-50 rounded-full flex items-center justify-center mb-2 hover:bg-red-700 hover:text-white transition-colors cursor-pointer"
          >
            <span class="material-icons text-dark">{{ action.icon }}</span>
          </div>
          <span class="text-xs text-dark q-link">{{ action.label }}</span>
        </router-link>
      </div>

      <!-- View Breakdown Button -->
      <button
        @click="viewBreakdown"
        class="w-full text-red-700 text-sm font-normal h-5 underline underline-offset"
      >
        View Breakdown
      </button>
    </div>

    <!-- Wallet History -->
    <div class="bg-white rounded-t-3xl p-5 mt-8">
      <h2 class="text-xl font-semibold text-black mb-8">Transactions</h2>

      <!-- Segment Control -->
      <div class="flex mb-6 rounded-3xl border border-gray-20">
        <button
          v-for="type in ['withdrawal', 'deposit']"
          :key="type"
          @click="historyType = type"
          :class="[
            'flex-1 py-4 text-sm rounded-3xl transition-colors q-link ',
            historyType === type
              ? 'text-dark border border-gray-20 font-bold bg-gray-50'
              : 'text-gray-500',
          ]"
        >
          {{ type.charAt(0).toUpperCase() + type.slice(1) }}
        </button>
      </div>

      <!-- No History State -->
      <div class="flex flex-col items-center justify-center py-12">
        <div
          class="w-16 h-16 rounded-full flex items-center justify-center mb-4"
        >
          <span class="material-icons text-gray-400 text-4xl"
            >pending_actions</span
          >
        </div>
        <p class="text-gray-500 text-sm">No withdrawal record</p>
      </div>
    </div>
  </div>
</template>

<script setup>
/*eslint-disable*/
import { ref } from "vue";

const balance = ref(0.0);
const historyType = ref("withdrawal");

const withdraw = () => {
  // Implement withdraw logic
};

const addFunds = () => {
  // Implement add funds logic
};

const bankAccount = () => {
  // Implement bank account logic
};

const viewBreakdown = () => {
  // Implement view breakdown logic
};

const actions = [
  {
    label: "Withdraw",
    path: "/payout",
    icon: "remove",
    handler: withdraw,
  },
  {
    label: "Add Funds",
    icon: "add",
    handler: addFunds,
  },
  {
    label: "Bank Account",
    path: "/services",
    icon: "account_balance",
    handler: bankAccount,
  },
];
</script>

<style scoped>
.q-link,
.nav-text,
a,
h2,
p {
  font-family: "Lato", sans-serif;
}
</style>
